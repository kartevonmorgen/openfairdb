# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

name: build-and-upload-artifacts

on:
  release:
    types:
      - published
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-upload-artifacts:
    name: Building and uploading artifacts
    runs-on: ${{ matrix.runner_os }}
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
        include:
          - target: x86_64-apple-darwin
            runner_platform: x86_64-apple-darwin
            runner_os: macos-latest
          - target: x86_64-unknown-linux-musl
            runner_platform: x86_64-unknown-linux-gnu
            runner_os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            runner_platform: x86_64-pc-windows-msvc
            runner_os: windows-latest
            executable_suffix: .exe

    steps:
      - name: Install musl-tools on Linux
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt -y install musl-tools

      # Copied from rusqlite
      - name: Add LLVM path on Windows
        if: runner.os == 'Windows'
        run: echo "C:\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install Rust toolchain for target
        uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          target: ${{ matrix.target }}
          toolchain: stable
          profile: minimal
          override: true

      - name: Install Rust toolchain for WASM
        uses: actions-rs/toolchain@v1
        with:
          target: wasm32-unknown-unknown
          toolchain: stable
          profile: minimal
          override: true

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Rust toolchain and build artifacts
        uses: Swatinem/rust-cache@v2

      - uses: actions/cache@v3
        id: cache-cargo-bins
        with:
          path: |
            ~/.cargo/bin/trunk*
            ~/.cargo/bin/wasm-pack*
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install wasm-pack
        if: steps.cache-cargo-bins.outputs.cache-hit != 'true'
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Install Trunk
        if: steps.cache-cargo-bins.outputs.cache-hit != 'true'
        run: cargo install --locked trunk

      - name: Build ofdb-app-clearance
        run: |
          cd ofdb-app-clearance/
          trunk -V
          trunk build

      - name: Build server executable
        run: |
          cargo build --locked --all-features --profile release --target ${{ matrix.target }}

      - name: Upload tagged release artifact
        id: upload-tagged-release-artifact
        # Only triggered by version tags that start with 'v'
        if: startsWith(github.ref, 'refs/tags/v') && startsWith(github.event.release.tag_name, 'v')
        uses: actions/upload-artifact@v3
        with:
          # Artifact is stored and downloaded as .zip archive
          name: openfairdb_${{ github.event.release.tag_name }}_${{ matrix.target }}${{ matrix.executable_suffix }}
          path: target/${{ matrix.target }}/release/openfairdb${{ matrix.executable_suffix }}

      - name: Upload untagged artifact
        if: steps.upload-tagged-release-artifact.outcome == 'skipped'
        uses: actions/upload-artifact@v3
        with:
          # Artifact is stored and downloaded as .zip archive
          name: openfairdb_${{ github.sha }}_${{ matrix.target }}${{ matrix.executable_suffix }}
          path: target/${{ matrix.target }}/release/openfairdb${{ matrix.executable_suffix }}
