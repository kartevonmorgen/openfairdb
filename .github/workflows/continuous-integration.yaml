# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

name: continuous-integration

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: short
  BUILD_TARGET: x86_64-unknown-linux-musl

jobs:
  continuous-integration:
    name: Building project and running tests
    runs-on: ${{ matrix.runner_os }}
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
        include:
          - target: x86_64-unknown-linux-musl
            runner_os: ubuntu-latest

    steps:
      - name: Install dependencies for `musl libc` on Linux
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt -y install musl-tools

      - name: Install Rust toolchain for target
        uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          target: ${{ matrix.target }}
          toolchain: stable
          profile: minimal
          override: true

      - name: Install Rust toolchain for WASM
        uses: actions-rs/toolchain@v1
        with:
          target: wasm32-unknown-unknown
          toolchain: stable
          profile: minimal
          override: true

      - name: Install Trunk for building the webapp
        run: |
          cargo install --locked trunk

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache Rust toolchain and build artifacts
        uses: Swatinem/rust-cache@v1

      - name: Check ofdb-entities crate
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --locked --all-targets --all-features --manifest-path  ofdb-entities/Cargo.toml

      - name: Check ofdb-core crate
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --locked --all-targets --all-features --manifest-path  ofdb-core/Cargo.toml

      - name: Check ofdb-boundary crate
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --locked --all-targets --all-features --manifest-path  ofdb-boundary/Cargo.toml

      - name: Check ofdb-gateways crate
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --locked --all-targets --all-features --manifest-path  ofdb-gateways/Cargo.toml

      - name: Check ofdb-app-clearance crate
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --locked --all-targets --all-features --manifest-path  ofdb-app-clearance/Cargo.toml

      - name: Build workspace tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked --workspace --all-targets --all-features --no-run

      - name: Run workspace tests (excluding benchmarks)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked --workspace --lib --bins --tests --examples --all-features -- --nocapture --quiet

      - name: Build ofdb-app-clearance
        run: |
          cd ofdb-app-clearance/
          trunk -V
          trunk build

      - name: Build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --locked --workspace --all-targets --profile release
